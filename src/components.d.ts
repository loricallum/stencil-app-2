/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  MatchResults,
} from '@stencil/router';


export namespace Components {

  interface AppHome {}
  interface AppHomeAttributes extends StencilHTMLAttributes {}

  interface AppProfile {
    'match': MatchResults;
  }
  interface AppProfileAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface DatepickerWeek {
    'mobile': boolean;
  }
  interface DatepickerWeekAttributes extends StencilHTMLAttributes {
    'mobile'?: boolean;
  }

  interface Datepicker {
    'DatepickerId': any;
    'maxDate': string;
    'minDate': string;
    'multiDate': boolean;
  }
  interface DatepickerAttributes extends StencilHTMLAttributes {
    'DatepickerId'?: any;
    'maxDate'?: string;
    'minDate'?: string;
    'multiDate'?: boolean;
    'onDateSelected'?: (event: CustomEvent) => void;
  }

  interface MonthHeader {
    'mobile': boolean;
    'month': number;
    'secondMonthHeader': boolean;
    'year': number;
  }
  interface MonthHeaderAttributes extends StencilHTMLAttributes {
    'mobile'?: boolean;
    'month'?: number;
    'onMonthChanged'?: (event: CustomEvent) => void;
    'secondMonthHeader'?: boolean;
    'year'?: number;
  }

  interface WeekHeader {
    'date': any;
    'dateRestrictionObj': any;
    'datesObj': any;
    'day': number;
    'daysInMonth': number;
    'lastDay': number;
    'lastDayOfMonth': any;
    'month': number;
    'multidate': boolean;
    'offset': number;
    'selectedDate': any;
    'todaysDate': string;
    'year': number;
  }
  interface WeekHeaderAttributes extends StencilHTMLAttributes {
    'date'?: any;
    'dateRestrictionObj'?: any;
    'datesObj'?: any;
    'day'?: number;
    'daysInMonth'?: number;
    'lastDay'?: number;
    'lastDayOfMonth'?: any;
    'month'?: number;
    'multidate'?: boolean;
    'offset'?: number;
    'onMouseOut'?: (event: CustomEvent) => void;
    'onMultiDateHover'?: (event: CustomEvent) => void;
    'onMultiDateSelected'?: (event: CustomEvent) => void;
    'onSingleDateSelected'?: (event: CustomEvent) => void;
    'selectedDate'?: any;
    'todaysDate'?: string;
    'year'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AppHome': Components.AppHome;
    'AppProfile': Components.AppProfile;
    'AppRoot': Components.AppRoot;
    'DatepickerWeek': Components.DatepickerWeek;
    'Datepicker': Components.Datepicker;
    'MonthHeader': Components.MonthHeader;
    'WeekHeader': Components.WeekHeader;
  }

  interface StencilIntrinsicElements {
    'app-home': Components.AppHomeAttributes;
    'app-profile': Components.AppProfileAttributes;
    'app-root': Components.AppRootAttributes;
    'datepicker-week': Components.DatepickerWeekAttributes;
    'datepicker': Components.DatepickerAttributes;
    'month-header': Components.MonthHeaderAttributes;
    'week-header': Components.WeekHeaderAttributes;
  }


  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {}
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLDatepickerWeekElement extends Components.DatepickerWeek, HTMLStencilElement {}
  var HTMLDatepickerWeekElement: {
    prototype: HTMLDatepickerWeekElement;
    new (): HTMLDatepickerWeekElement;
  };

  interface HTMLDatepickerElement extends Components.Datepicker, HTMLStencilElement {}
  var HTMLDatepickerElement: {
    prototype: HTMLDatepickerElement;
    new (): HTMLDatepickerElement;
  };

  interface HTMLMonthHeaderElement extends Components.MonthHeader, HTMLStencilElement {}
  var HTMLMonthHeaderElement: {
    prototype: HTMLMonthHeaderElement;
    new (): HTMLMonthHeaderElement;
  };

  interface HTMLWeekHeaderElement extends Components.WeekHeader, HTMLStencilElement {}
  var HTMLWeekHeaderElement: {
    prototype: HTMLWeekHeaderElement;
    new (): HTMLWeekHeaderElement;
  };

  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement
    'app-profile': HTMLAppProfileElement
    'app-root': HTMLAppRootElement
    'datepicker-week': HTMLDatepickerWeekElement
    'datepicker': HTMLDatepickerElement
    'month-header': HTMLMonthHeaderElement
    'week-header': HTMLWeekHeaderElement
  }

  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
    'app-profile': HTMLAppProfileElement;
    'app-root': HTMLAppRootElement;
    'datepicker-week': HTMLDatepickerWeekElement;
    'datepicker': HTMLDatepickerElement;
    'month-header': HTMLMonthHeaderElement;
    'week-header': HTMLWeekHeaderElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
